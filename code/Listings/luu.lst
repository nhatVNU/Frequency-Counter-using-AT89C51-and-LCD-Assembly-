A51 MACRO ASSEMBLER  LUU                                                                  06/06/2022 13:07:39 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\luu.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE luu.asm SET(SMALL) DEBUG PRINT(.\Listings\luu.lst) OBJECT(.\Objects\luu
                      .obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     ;------------------------------------------------------------------------------------------
                             ---------#!
                       3     ;-----------------------------{{Author: Mustafa Okasha}}-----------------------------------
                             ---------#!
                       4     ;-----------------------{{Project: Digital Frequency Meter 1.0}}---------------------------
                             ---------#!
                       5     ;---------------------------{{System: 8051 microcontroller}}-------------------------------
                             ---------#!
                       6     ;------------------------------{{Released at: 11/4/2013}}----------------------------------
                             ---------#!
                       7     ;------------------------------------------------------------------------------------------
                             ---------#!
  0080                 8     LCD             EQU             P0                                                         
                                  ;#!Define Port0 for LCD 8-bits data 
  00B6                 9     EN              BIT             P3.6                                                    ;#!
                             Define Pin 2.7 for EN bit of LCD
  00B4                10     RS              BIT             P3.4                                                    ;#!
                             Define Pin 2.5 for RS bit of LCD
  0030                11     DB0             EQU             30H                                                        
                                  ;#!Define RAM byte to hold output data 0
  0031                12     DB1             EQU             31H                                                        
                                  ;#!Define RAM byte to hold output data 1 
  0032                13     DB2             EQU             32H                                                        
                                  ;#!Define RAM byte to hold output data 2
                      14     ;------------------------------------------------------------------------------------------
                             ---------#!
                      15     ;-------------------------------------------------------------#!
                      16     ;                       ~ MAIN ROUTINE ~
                      17     ;-------------------------------------------------------------#!
                      18     ;1.This Program is to count frequency from T1, by using mode 1 Counter 16 bit,
                      19     ;
                      20     ;2.Counter resets every 1 second that generated by timer 0, mode 1, timer 16 bit 
                      21     ;
                      22     ;3.Every 1 second data will show on LCD Character 
                      23     ;
                      24     ;------------------------------------------------------------#!
0000                  25                     ORG     0000H                                                   ;#!Orginate
                              at rom address 0000H        
0000 0130             26                     AJMP    MAIN                                                    ;#!Absoulte
                              jump to main routine
001B                  27                     ORG             001BH                                           ;#!Orginate
                              at address interrupt for timer1
001B 0532             28                     INC             DB2                                             ;#!Incremen
                             t DB2 as number of counter roll over
001D 32               29                     RETI                                                            ;#!return f
                             rom ISR
                      30                     ;
0030                  31                     ORG   0030H                                                     ;#!Orginate
                              at rom adress 0030H
0030 113A             32     MAIN:         ACALL LcdInit                                     ;#!CALL lcd initialization 
                             subroutine
0032 1145             33     AGAIN:  ACALL   CalculateHz                                             ;#!CALL CalculateHz
                              subroutine                                          
0034 1178             34                     ACALL   Hex24toBCD                                              ;#!CALL Hex
                             24toBCD subroutine
0036 3109             35                     ACALL   PrintOnLcd                                              ;#!CALL Pri
A51 MACRO ASSEMBLER  LUU                                                                  06/06/2022 13:07:39 PAGE     2

                             ntOnLcd subroutine
0038 0132             36                     AJMP    AGAIN                                                   ;#!return a
                             nd start the program once more
                      37     ;------------------------------------------------------------------------------------------
                             --------#!
                      38     ;                       ~ Subroutine lcd_Init ~
                      39     ;-------------------------------------------------------------#!
                      40                     ;To initialize 16x2 LCD 
                      41                     ;Sending command codes 38H,0CH,01H,06H,8BH
                      42                     ;Using look-up table at address 300H
                      43     ;------------------------------------------------------------#!
003A                  44     LcdInit:                                                                                
003A 900300           45                     MOV     DPTR,#MYCOM                                             ;#!Set DPTR
                              to commands look-up table's address
003D E4               46     loop1:  CLR     A                                                       ;#!Clear ACC for ne
                             xt instruction
003E 93               47                     MOVC    A,@A+DPTR                                               ;#!Get code
                              from look-up table the place it into ACC
003F 3149             48                     ACALL   COMMWRT                                 ;#!CALL LCD command write s
                             ubroutine
0041 A3               49                     INC     DPTR                                                    ;#!Incremen
                             t DPTR  <DPTR = DPTR + 1>
0042 70F9             50                     JNZ     loop1                                                   ;#!Jump if 
                             ACC doesn't equal ZERO to start of loop1             
0044 22               51                     RET                                                             ;#!return i
                             f zero to MAIN routine
                      52     ;-----------------------------------------------------------------------------------------#!
                      53     ;                       ~ Subroutine CalculateHz ~
                      54     ;-------------------------------------------------------------#!
                      55                     ;To calculate no. of cycles at time of one second
                      56                     ;
                      57                     ;Use T0 timer to give delay one second
                      58                     ;Fill T0 with 62500 and make it roll over 16 times
                      59                     ; 16 x 62500 = 1,000,000 uSec = 1 Sec
                      60                     ;
                      61                     ;Use T1 counter to count no. of cycles
                      62                     ;Keep counting cycles with start of one secon timer
                      63                     ;When timer finish, save data at RAM, DB0 = TL1 , DB1 = TH1
                      64                     ;Enable T1 interrupt and if counter roll over before 1 sec 
                      65                     ;Increment DB2 in the ISR
                      66     ;------------------------------------------------------------#!
0045                  67     CalculateHz:
0045 758951           68                     MOV             TMOD,#01010001B                                 ;#!Counter 
                             1,mode 1 - Timer 0, mode 1
0048 75A889           69                     MOV             IE,#10001001B                                   ;#!Enable T
                             imer 1 interrupt and ex 0 
                      70                     ;
004B 753000           71                     MOV             DB0,#00H                                                ;#!
                             Clear databyte 0 - RAM location 30
004E 753100           72                     MOV             DB1,#00H                                                ;#!
                             Clear databyte 1 - RAM location 31
0051 753200           73                     MOV             DB2,#00H                                                ;#!
                             Clear databyte 2 - RAM location 32
                      74                     ;
0054 758B00           75                     MOV             TL1,#00H                                                ;#!
                             Initialize counter
0057 758D00           76                     MOV             TH1,#00H                                                ;#!
                             TL1 = TH0 = ZER0 
005A D2B2             77                     SETB          P3.2                                                      ;#!
                             Make T1 input
005C D28E             78                     SETB          TR1                                                       ;#!
                             Start counter by setting TR1 high
                      79                     ;
005E 7A10             80                     MOV             R2,#16                                        ;#!Make loop 
                             for delay 1 Sec -> (16 x 62500) uSec  
0060 758ADC           81     BACK:         MOV               TL0,#LOW(-62500)                                        ;#!
A51 MACRO ASSEMBLER  LUU                                                                  06/06/2022 13:07:39 PAGE     3

                             Initialize timer with 62500d = BDCh
0063 758C0B           82                     MOV             TH0,#HIGH(-62500)                                       ;#!
                             TH0 = Bh, TL0 = DCh
0066 D28C             83                     SETB        TR0                                                         ;#!
                             Start timer by setting TR0 high
0068 308DFD           84                     JNB             TF0,$                                                   ;#!
                             Stay here till timer finish at FFFFh
006B C28C             85                     CLR             TR0                                       ;#!Stop the timer
006D C28D             86                     CLR             TF0                                                     ;#!
                             Make timer flag TF = 0 again
006F DAEF             87                     DJNZ          R2,BACK                                                   ;#!
                             Loop till 16 times 
                      88                     ;
0071 858B30           89                     MOV             DB0,TL1                                                 ;#G
                             et data from counter to databytes 0,1
0074 858D31           90                     MOV             DB1,TH1                                                 ;#
0077 22               91                     RET
                      92     ;-----------------------------------------------------------------------------------------#!
                      93     ;-------------------------------------------------------------------------#!
                      94     ;                       ~ Subroutine Hex24toBCD ~
                      95     ;-------------------------------------------------------------#!
                      96            ;To convert hex 24 bit to 7 digit decimal ASCIIs
                      97            ;input Data byte 2 = DB2
                      98            ;input Data byte 1 = DB1 
                      99              ;input Data byte 0 = DB0
                     100                ;
                     101              ;Output milions = R7
                     102            ;Output hundredthousands = R6
                     103            ;Output tenthousands = R5
                     104            ;Output thousands = R4
                     105            ;Output hundreds = R3
                     106            ;Output tens = R2
                     107            ;Output ones = R1
                     108            ;
                     109     ;------------------------------------------------------------#!
0078                 110     Hex24toBCD:
0078 7900            111             MOV     R1,#00H                                                 ;#!Clear R1   
007A 7A00            112             MOV     R2,#00H                                                 ;#!Clear R2
007C 7B00            113             MOV     R3,#00H                                                 ;#!Clear R3 
007E 7C00            114             MOV     R4,#00H                                                 ;#!Clear R4 
0080 7D00            115             MOV     R5,#00H                                                 ;#!Clear R5 
0082 7E00            116             MOV     R6,#00H                                                 ;#!Clear R6 
0084 7F00            117             MOV     R7,#00H                                                 ;#!Clear R7 
                     118                     ;
0086 75F00A          119             MOV     B,#10D
0089 E530            120             MOV     A,DB0                                                   ;#!Get the first da
                             ta byte  
008B 84              121             DIV     AB                                                              ;#!Divide i
                             t by 10
008C A9F0            122             MOV     R1,B                                                    ;#!Save the first d
                             igit in R1
                     123                     ; 
008E 75F00A          124             MOV     B,#10                                                    
0091 84              125             DIV     AB                                                              ;#!Divide b
                             y 10 once more
0092 AAF0            126             MOV     R2,B                                                    ;#!Save the next di
                             git in R2
0094 FB              127             MOV     R3,A                                                    ;#!Save the last di
                             git in R3
                     128                     ;
0095 E531            129                     MOV             A,DB1                                                   ;#!
                             Get the second data byte
0097 B40006          130             CJNE    A,#0H,NEXT1                                             ;#!Check for second
                              high byte
009A E532            131                     MOV             A,DB2
009C B4002F          132                     CJNE    A,#0H,NEXT2
A51 MACRO ASSEMBLER  LUU                                                                  06/06/2022 13:07:39 PAGE     4

009F 22              133             RET                                                                     ;#!If it co
                             ntain nothing, return to MAIN
                     134                     ;;;
00A0 7406            135     NEXT1:  MOV     A,#6D                                                   ;#!If there was Val
                             ue at DB1, Decrement and..
00A2 29              136             ADD     A,R1                                                    ;#!Add 265 to corre
                             sponding digits on R1, R2 & R3
00A3 75F00A          137             MOV     B,#10D
00A6 84              138             DIV     AB
00A7 A9F0            139             MOV     R1,B                                                    ;#!Save remainder a
                             fter adding 6 on R1
                     140                     ;
00A9 2405            141             ADD     A,#5D
00AB 2A              142             ADD     A,R2
00AC 75F00A          143             MOV     B,#10D
00AF 84              144             DIV     AB
00B0 AAF0            145             MOV     R2,B                                                    ;#!Save remainder a
                             fter adding 5 on R2
                     146                     ;
00B2 2402            147             ADD     A,#2D
00B4 2B              148             ADD     A,R3
00B5 75F00A          149             MOV     B,#10D
00B8 84              150             DIV     AB
00B9 ABF0            151             MOV     R3,B                                                    ;#!Save remainder a
                             fter adding 6 on R3
                     152                     ;
00BB 2C              153                     ADD     A,R4
00BC FC              154             MOV     R4,A
00BD D531E0          155             DJNZ    DB1,NEXT1                                               ;#!Decrement DB1 an
                             d do process if it still not zero
00C0 75F00A          156             MOV     B,#10D                                                  ;#!If zero stop loo
                             ping and add remainder to R4 & R5
00C3 EC              157             MOV     A,R4
00C4 84              158             DIV     AB
00C5 ACF0            159             MOV     R4,B
                     160                     ;
00C7 FD              161             MOV     R5,A                                                    
00C8 E532            162                     MOV             A,DB2
00CA B40001          163                     CJNE    A,#0H,NEXT2                                             ;#!Check fo
                             r last high byte
00CD 22              164             RET                                                                     ;#!If it co
                             ntain nothing, return to MAIN
                     165                     ;;;
00CE 7406            166     NEXT2:  MOV     A,#6D                                                   ;#!If there was Val
                             ue at DB2
00D0 29              167             ADD     A,R1                                                    ;#!Add 65536 to cor
                             responding digits R1,R2,R3,R4&R5
00D1 75F00A          168             MOV     B,#10D
00D4 84              169             DIV     AB
00D5 A9F0            170             MOV     R1,B                                                    ;#!Save remainder a
                             fter adding 6 on R1  
                     171                     ;
00D7 2403            172             ADD     A,#3D
00D9 2A              173             ADD     A,R2
00DA 75F00A          174             MOV     B,#10D
00DD 84              175             DIV     AB
00DE AAF0            176             MOV     R2,B                                                    ;#!Save remainder a
                             fter adding 3 on R2
                     177                     ;
00E0 2405            178             ADD     A,#5D
00E2 2B              179             ADD     A,R3
00E3 75F00A          180             MOV     B,#10D
00E6 84              181             DIV     AB
00E7 ABF0            182             MOV     R3,B                                                    ;#!Save remainder a
                             fter adding 5 on R3
                     183                     ;
A51 MACRO ASSEMBLER  LUU                                                                  06/06/2022 13:07:39 PAGE     5

00E9 2405            184                     ADD             A,#5D
00EB 2C              185                     ADD     A,R4
00EC 75F00A          186             MOV     B,#10D
00EF 84              187             DIV     AB
00F0 ACF0            188             MOV     R4,B                                                    ;#!Save remainder a
                             fter adding 5 on R4
                     189                     ;
00F2 2406            190                     ADD             A,#6D
00F4 2D              191                     ADD             A,R5
00F5 75F00A          192                     MOV     B,#10D
00F8 84              193             DIV     AB
00F9 ADF0            194             MOV     R5,B                                                    ;#!Save remainder a
                             fter adding 6 on R5
                     195                     ;
00FB 2E              196                     ADD     A,R6
00FC FE              197             MOV     R6,A
00FD D532CE          198             DJNZ    DB2,NEXT2                                               ;#!Decrement DB2 an
                             d do process if it still not zero
0100 75F00A          199             MOV     B,#10D                                                  ;#!If zero stop loo
                             ping and add remainder to R6 & R7
0103 EE              200             MOV     A,R6
0104 84              201             DIV     AB
0105 AEF0            202             MOV     R6,B                                                    
0107 FF              203             MOV     R7,A
0108 22              204                     RET                                                                        
                                  ;#!return to MAIN
                     205     ;------------------------------------------------------------------------------------------
                             --------#!
                     206     ;                       ~ Subroutine PrintOnLcd ~
                     207     ;-------------------------------------------------------------#!
                     208     ;               ;To print result data on LCD
                     209     ;               ;First locate address then send data to LCD
                     210     ;-------------------------------------------------------------#!
0109                 211     PrintOnLcd:     
0109 7482            212                     MOV             A,#82H                                                  ;#!
                             Send address as commmand
010B 3149            213                     ACALL   COMMWRT                                                 ;#!to deter
                             mine where data below will be written
                     214                     ;
010D 7446            215                     MOV A, #"F"
010F 3154            216             ACALL DATAWRT   
                     217                     ;
0111 743D            218                     MOV A, #"="
0113 3154            219             ACALL DATAWRT
0115 EF              220                     MOV     A,R7                                                    ;#!Get outp
                             ut data form R7
0116 2430            221             ADD             A,#30H                                                  ;#!Convert 
                             to ASCII
0118 3154            222             ACALL   DATAWRT                                                 ;#!Print on LCD
                     223                     ;
011A 742E            224                     MOV             A,#"."                                                  ;#!
                             Print dot
011C 3154            225                     ACALL   DATAWRT                                                 ;#!
                     226                     ;
011E EE              227                     MOV     A,R6                                                    ;#!Get outp
                             ut data form R6
011F 2430            228             ADD             A,#30H                                                  ;#!Convert 
                             to ASCII
0121 3154            229             ACALL   DATAWRT                                                 ;#!Print on LCD
                     230                     ;
0123 ED              231             MOV     A,R5                                                    ;#!Get output data 
                             form R5
0124 2430            232             ADD             A,#30H                                                  ;#!Convert 
                             to ASCII
0126 3154            233             ACALL   DATAWRT                                                 ;#!Print on LCD
                     234             ;
A51 MACRO ASSEMBLER  LUU                                                                  06/06/2022 13:07:39 PAGE     6

0128 EC              235             MOV     A,R4                                                    ;#!Get output data 
                             form R4
0129 2430            236             ADD             A,#30H                                                  ;#!Convert 
                             to ASCII
012B 3154            237             ACALL   DATAWRT                                                 ;#!Print on LCD
                     238             ;
012D EB              239             MOV     A,R3                                                    ;#!Get output data 
                             form R3
012E 2430            240             ADD             A,#30H                                                  ;#!Convert 
                             to ASCII
0130 3154            241             ACALL   DATAWRT                                                 ;#!Print on LCD
                     242             ;
0132 EA              243             MOV     A,R2                                                    ;#!Get output data 
                             form R2
0133 2430            244             ADD             A,#30H                                                  ;#!Convert 
                             to ASCII
0135 3154            245             ACALL   DATAWRT                                                 ;#!Print on LCD
                     246             ;
0137 E9              247             MOV     A,R1                                                    ;#!Get output data 
                             form R1
0138 2430            248             ADD             A,#30H                                                  ;#!Convert 
                             to ASCII
013A 3154            249             ACALL   DATAWRT                                                 ;#!Print on LCD
                     250                     ;
013C 744D            251                     MOV             A,#"M"                                                  ;#!
                             Print "M" 
013E 3154            252                     ACALL   DATAWRT                                                 ;#!
0140 7448            253                     MOV             A,#"H"                                                  ;#!
                             Print "H"
0142 3154            254                     ACALL   DATAWRT                                                 ;#!
0144 747A            255                     MOV             A,#"z"                                                  ;#!
                             Print "z"
0146 3154            256                     ACALL   DATAWRT                                                 ;#!
0148 22              257             RET
                     258     ;------------------------------------------------------------------------------------------
                             --------#!
                     259     ;                       ~ Subroutine COMMWRT ~
                     260     ;-------------------------------------------------------------#!
                     261     ;               ;To send commands to LCD port
                     262     ;-------------------------------------------------------------#!
0149                 263     COMMWRT:                                                                                ;#!
                             Send command to LCD                                                  
0149 F580            264                     MOV     LCD,A                                                   ;#!Copy reg
                              A to P1
014B C2B4            265                     CLR     RS                                                              ;#!
                             RS=0 for command
014D D2B6            266                     SETB    EN                                                              ;#!
                             E=1 for high pulse
014F 315F            267                     ACALL   DELAY                                                   ;#!Give LCD
                              some time
0151 C2B6            268                     CLR     EN                                                              ;#!
                             E=0 for H-to-L pulse
0153 22              269                     RET                                                                        
                                  ;#!return to caller
                     270     ;------------------------------------------------------------------------------------------
                             --------#!
                     271     ;                       ~ Subroutine DATAWRT~
                     272     ;-------------------------------------------------------------#!
                     273     ;               ;To send data to LCD port
                     274     ;-------------------------------------------------------------#!
0154                 275     DATAWRT:                                                                                ;#!
                             Write data to LCD
0154 F580            276                     MOV     LCD,A                                                   ;#!Copy reg
                              A to port 1
0156 D2B4            277                     SETB    RS                                                              ;#!
                             RS=1 for data
A51 MACRO ASSEMBLER  LUU                                                                  06/06/2022 13:07:39 PAGE     7

0158 D2B6            278                     SETB    EN                                                              ;#!
                             E=1 for high pulse
015A 315F            279                     ACALL   DELAY                                                   ;#!Give LCD
                              some time
015C C2B6            280                     CLR     EN                                                              ;#!
                             E=0 for H-to-L pulse
015E 22              281                     RET                                                                        
                                  ;#!return to caller
                     282     ;------------------------------------------------------------------------------------------
                             ---------#!
                     283     ;                       ~ Subroutine DELAY ~
                     284     ;-------------------------------------------------------------#!
                     285     ;               ;To make short delay between sending times to LCD
                     286     ;-------------------------------------------------------------#!
015F                 287     DELAY:                                                                                  ;#!
                             Short Delay subroutine
015F 78FF            288                     MOV     R0,#255                                                 ;#!R0 = 255
0161 D8FE            289                     DJNZ    R0,$                                                    ;#!stay her
                             e until R0 becomes ZERO      
0163 22              290                     RET                                                                        
                                  ;#!return to caller
                     291     ;------------------------------------------------------------------------------------------
                             ---------#!
                     292     ;------------------------------------------------------------------------------------------
                             ---------#!
0300                 293                     ORG             300H                                                    ;#!
                             Orginate at address 300H
0300 380C0106        294     MYCOM:  DB              38H,0CH,01H,06H,8BH,0                   ;#!Look-up table for LCD in
                             itialization commands 
0304 8B00                    
                     295                     END     
A51 MACRO ASSEMBLER  LUU                                                                  06/06/2022 13:07:39 PAGE     8

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   0032H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BACK . . . . . . .  C ADDR   0060H   A   
CALCULATEHZ. . . .  C ADDR   0045H   A   
COMMWRT. . . . . .  C ADDR   0149H   A   
DATAWRT. . . . . .  C ADDR   0154H   A   
DB0. . . . . . . .  N NUMB   0030H   A   
DB1. . . . . . . .  N NUMB   0031H   A   
DB2. . . . . . . .  N NUMB   0032H   A   
DELAY. . . . . . .  C ADDR   015FH   A   
EN . . . . . . . .  B ADDR   00B0H.6 A   
HEX24TOBCD . . . .  C ADDR   0078H   A   
IE . . . . . . . .  D ADDR   00A8H   A   
LCD. . . . . . . .  D ADDR   0080H   A   
LCDINIT. . . . . .  C ADDR   003AH   A   
LOOP1. . . . . . .  C ADDR   003DH   A   
MAIN . . . . . . .  C ADDR   0030H   A   
MYCOM. . . . . . .  C ADDR   0300H   A   
NEXT1. . . . . . .  C ADDR   00A0H   A   
NEXT2. . . . . . .  C ADDR   00CEH   A   
P0 . . . . . . . .  D ADDR   0080H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PRINTONLCD . . . .  C ADDR   0109H   A   
RS . . . . . . . .  B ADDR   00B0H.4 A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
